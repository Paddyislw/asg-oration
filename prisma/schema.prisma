generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String   @unique
  passwordHash String   @map("password_hash")
  displayName  String?  @map("display_name")
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  chatSessions ChatSession[]
  userSessions UserSession[]

  @@index([email], map: "idx_users_email")
  @@map("users")
}

model ChatSession {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId    String   @map("user_id") @db.Uuid
  title     String   @default("New Chat")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  // Relations
  user     User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages ChatMessage[]

  @@index([createdAt(sort: Desc)], map: "idx_chat_sessions_created_at")
  @@index([userId], map: "idx_chat_sessions_user_id")
  @@map("chat_sessions")
}

model ChatMessage {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  sessionId String   @map("session_id") @db.Uuid
  role      String   // "user" or "assistant"
  content   String
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  // Relations
  session ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@index([createdAt], map: "idx_chat_messages_created_at")
  @@index([sessionId], map: "idx_chat_messages_session_id")
  @@map("chat_messages")
}

model UserSession {
  id           Int      @id @default(autoincrement())
  userId       String?  @map("user_id") @db.Uuid
  sessionToken String   @unique @map("session_token") @db.VarChar(64)
  expiresAt    DateTime @map("expires_at") @db.Timestamp(6)
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamp(6)

  // Relations
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([sessionToken], map: "idx_user_sessions_token")
  @@index([userId], map: "idx_user_sessions_user_id")
  @@map("user_sessions")
}